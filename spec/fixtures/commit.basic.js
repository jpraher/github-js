{"commit": {"removed": [], "added": [], "message": "Supporting nested params (post[body]=Something)\n\nSigned-off-by: why the lucky stiff \u003Cwhy@whytheluckystiff.net\u003E", "modified": [{"diff": "@@ -279,6 +279,7 @@ module Camping\n   #\n   module Base\n     attr_accessor :input, :cookies, :headers, :body, :status, :root\n+    M = proc { |_, o, n| o.merge(n, \u0026M) }\n \n     # Display a view, calling it by its method name +m+.  If a \u003Ctt\u003Elayout\u003C/tt\u003E\n     # method is found in Camping::Views, it will be used to wrap the HTML.\n@@ -412,18 +413,14 @@ module Camping\n     \n     def initialize(env, m) #:nodoc: \n       r = @request = Rack::Request.new(@env = env)\n-      @root, @input, @cookies,\n+      @root, p, @cookies,\n       @headers, @status, @method =\n       (env.SCRIPT_NAME||'').sub(/\\/$/,''), \n       H[r.params], H[r.cookies],\n       {}, m =~ /r(\\d+)/ ? $1.to_i : 200, m\n-            \n-      @input.each do |k, v|\n-        if k[-2..-1] == \"[]\"\n-          @input[k[0..-3]] = @input.delete(k)\n-        elsif k =~ /(.*)\\[([^\\]]+)\\]$/\n-          (@input[$1] ||= H[])[$2] = @input.delete(k)\n-        end\n+      \n+      @input = p.inject(H[]) do |h, (k, v)|\n+        h.merge(k.split(/[\\]\\[]+/).reverse.inject(v) { |x, i| H[i =\u003E x] }, \u0026M)\n       end\n     end\n ", "filename": "lib/camping-unabridged.rb"}], "parents": [{"id": "64bd85c8a03d3c812f6b6aac1ca9660ba8f61b91"}], "url": "http://github.com/judofyr/camping/commit/e7719af8714a4141b2637648892c82198242c167", "author": {"name": "Magnus Holm", "email": "judofyr@gmail.com"}, "id": "e7719af8714a4141b2637648892c82198242c167", "committed_date": "2009-02-24T07:49:37-08:00", "authored_date": "2009-01-23T13:07:42-08:00", "tree": "95504fe4284fa4f8524a31b51e5d1181aa251944", "committer": {"name": "why the lucky stiff", "email": "why@whytheluckystiff.net"}}}